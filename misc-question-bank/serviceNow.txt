[1,3,3,6,4]

duplicate number 



int[] arr = new int[];


HashMap<Integer,Integer> = new HashMap<>();


for(int i= 0 ;i<arr.length; i++){

	if(map.containsKey(arr[i])){
		return true;
	}else{
		map.put(arr[i],arr[i])
	}
		

}

return false;

------------------------------------


binarytree 
    3
   
  1  2
  
 4 5  _ 9
  
  2d array -> [[3],[1,2],[4,5,9]]

  
Queue<Integer> q = new Queue<>();

public int[] preorder(root,i){
	
	if(root != null){
		q.enqueue(root.data);
		q.enqueue(-1);
		
		if(root.left != null){
			q.enqueue(root.left.data);
		}
		if(root.right != null){
			q.enqueue(root.right.data);
		}
	}
	preorder(root.left,q);
	preorder(root.right,q);
}


List<List<Integer>> result = new ArrayList<>();

while(!q.isempty()){
	
	List<Integer> list = new ArrayList<>();
	
	while(q.peek() != -1){
		
		list.add(q.dequeue());
	}
	
	result.add(list);

}
---------------------------


String
need to length of longest substring no repeating characters
"abcabcbb"
"dbcgedd"

Set<Character> set = new HashSet<>();
int currMax = 0;

for(int i=0; i<str.length();i++){
	
	if(!set.contains(str.charAt(i))){
		set.add(str.charAt(i));
	}else{
		currMax =  Math.max(currMax, set.size());
		set.clear();
	}
}









  